//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
// ChangeSceneDirection
//				シーン切り替え時のフェードイン、アウト処理を行うクラス
//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
#include <DxLib.h>
#include "ChangeSceneDirection.h"

#define IN_TIME		1.0f	//	フェードイン時間
#define OUT_TIME	1.0f	//	フェードアウト時間

#define MAX_FADE	255

//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
// コンストラクタ
//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
ChangeSceneDirection::ChangeSceneDirection():
	in(false),
	nowDirection(false),
	timeCount(0.0f),
	readyChangeScene(false)
{
}

//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
// デストラクタ
//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
ChangeSceneDirection::~ChangeSceneDirection()
{
}

//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
// 初期化処理
//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
void ChangeSceneDirection::Initialize()
{
	in = false;
	nowDirection = false;
	readyChangeScene = false;
	timeCount = 0.0f;
}

//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
// 更新処理
//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
void ChangeSceneDirection::Update()
{
	readyChangeScene = false;
	if (!(nowDirection)) return;

	float beforeTime = timeCount;
	timeCount += system->GetTimerSystem().GetFrameDeltaTime();

	//	フェードインの時の処理
	if (in)
	{
		if (timeCount > IN_TIME)
		{
			nowDirection = false;
			readyChangeScene = true;
		}
	}
	//	フェードアウトの時の処理
	else
	{
		if (timeCount > OUT_TIME)
		{
			nowDirection = false;
			readyChangeScene = true;
		}
	}
}

//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
// 描画処理
//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
void ChangeSceneDirection::Render()
{
	if (!(nowDirection)) return;

	//	フェードインの時の処理
	if (in)
	{
		SetDrawBlendMode(DX_BLENDMODE_ALPHA, MAX_FADE - timeCount / IN_TIME * MAX_FADE);
		DrawBox(0, 0, screenWidth, screenHeight, 0x000000, 1);
		SetDrawBlendMode(DX_BLENDMODE_NOBLEND, 0);
	}
	//	フェードアウトの時の処理
	else
	{
		SetDrawBlendMode(DX_BLENDMODE_ALPHA, timeCount / IN_TIME * MAX_FADE);
		DrawBox(0, 0, screenWidth, screenHeight, 0x000000, 1);
		SetDrawBlendMode(DX_BLENDMODE_NOBLEND, 0);
	}
}

//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
// 解放処理
//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
void ChangeSceneDirection::Finalize()
{
}

//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
// フェード開始時に実行する初期化処理
//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
void ChangeSceneDirection::StartSceneDirection(bool in)
{
	this->in = in;
	nowDirection = true;
	readyChangeScene = false;
	timeCount = 0.0f;

	//	フェードイン時の初期化内容
	if (in)	
	{
	}
	//	フェードアウト時の初期化内容
	else
	{
	}
}

//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
// 現在描画中かどうかのフラグを渡す
//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
bool ChangeSceneDirection::GetNowSceneDirection()
{
	return nowDirection;
}

//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
// シーン遷移可能かどうかのフラグを渡す
//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
bool ChangeSceneDirection::GetReadyChangeScene()
{
	return readyChangeScene;
}
