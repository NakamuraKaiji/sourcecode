//----------------------------------------------------------------------------------------------------
//	LogoScene
//		ロゴを描画させるシーン
// 
//----------------------------------------------------------------------------------------------------
#include <DxLib.h>
#include <string>
#include "LogoScene.h"

#define MAX_DRAW_COUNT		1.5f			//	ロゴ表示時間
#define MAX_FADE_COUNT		0.7f			//	ロゴフェード時間

#define FADE				255				//	フェイドカウントマックス

const std::vector<std::string> LOGO_GRAPH_PATH = {		//	ロゴ画像のアドレス
	"Resources/Textures/team_logo1.png"
};

const std::vector<std::string> LOGO_SOUND_PATH = {		//	ロゴ音声用のアドレス
	"Resources/Sounds/SE/.mp3"
};

//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
// コンストラクタ
//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
LogoScene::LogoScene() :
	timeCount(0),
	logoDrawNum(0),
	fadeCount(0)
{
	for (int i = 0; i < LOGO_GRAPH_PATH.size(); i++)
	{
		logoGraph.push_back(LoadGraph(LOGO_GRAPH_PATH[i].c_str()));
		logoSound.push_back(LoadSoundMem(LOGO_SOUND_PATH[i].c_str()));
	}
}

//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
// デストラクタ
//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
LogoScene::~LogoScene()
{
}

//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
// 初期化処理
//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
void LogoScene::Initialize()
{
}

//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
// 更新処理
//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
void LogoScene::Update()
{
	//	タイマーを足す
	timeCount += system->GetTimerSystem().GetFrameDeltaTime();
	//	ロゴの更新処理
	LogoUpdate();
	//	ロゴを表示しきったらシーン遷移
	if (logoDrawNum >= logoGraph.size())	ChangeScene(SceneID::Title);

	//	ロゴ表示スキップ
	if (
		system->GetInputSystem().IsKeyPressed(KEY_INPUT_Z) ||
		system->GetInputSystem().IsKeyPressed(KEY_INPUT_SPACE) || 
		system->GetInputSystem().IsButtonDown(DualShock4Input::OPTIONS)
		)
	{
		fadeCount = 0;
		timeCount = 0;
		logoDrawNum++;
	}
}

//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
// 描画処理
//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
void LogoScene::Render()
{
	//	ロゴの描画処理
	if (logoDrawNum < logoGraph.size()) LogoDraw(logoGraph[logoDrawNum]);
}

//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
// 解放処理
//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
void LogoScene::Finalize()
{
	for (int i = 0; i < logoGraph.size(); i++)
	{
		DeleteGraph(logoGraph[i]);
		DeleteSoundMem(logoSound[i]);
	}
	logoGraph.clear();
	logoSound.clear();
}

//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
// ロゴの更新処理
//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
void LogoScene::LogoUpdate()
{
	//	フェードイン時の更新
	if (timeCount < MAX_FADE_COUNT)
	{
		fadeCount = FADE / MAX_FADE_COUNT * timeCount;
	}
	//	描画中の処理
	else if (timeCount < MAX_FADE_COUNT + MAX_DRAW_COUNT);
	//	フェードアウト時の更新
	else if (timeCount < MAX_FADE_COUNT + MAX_DRAW_COUNT + MAX_FADE_COUNT)
	{
		fadeCount = FADE - FADE / MAX_FADE_COUNT * (timeCount - MAX_FADE_COUNT - MAX_DRAW_COUNT);
	}
	//	ロゴを描画し終わった時の処理
	else
	{
		fadeCount = 0.0f;
		timeCount = 0.0f;
		logoDrawNum++;
	}
}

//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
// ロゴの描画処理
//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
void LogoScene::LogoDraw(int graph)
{
	SetDrawBlendMode(DX_BLENDMODE_ALPHA, static_cast<int>(fadeCount));
	DrawRotaGraph(screenWidth / 2, screenHeight / 2, 1.0, 0.0, graph, 1);
	SetDrawBlendMode(DX_BLENDMODE_NOBLEND, 0);
}
